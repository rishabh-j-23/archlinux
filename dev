#!/usr/bin/env bash

ACTION="$1"
PACKAGE="$2"
DRY_RUN="$3"

LOGGER="ERROR ::"

# Helper to run or echo based on dry run mode
run() {
  if [[ "$DRY_RUN" == "--dry-run" ]]; then
    echo "[dry-run] $*"
  else
    eval "$@"
  fi
}

reload_package() {
  local script_path
  script_path="$(pwd)/reload/$1.sh"

  if [[ -f "$script_path" ]]; then
    echo "RELOADING::$1::[$script_path]"
    run bash "$script_path"

    # flush stdin to prevent key bleed only if not dry-run
    if [[ "$DRY_RUN" != "--dry-run" ]]; then
      read -t 0.1 -n 10000 || true
    fi

    exit 0
  else
    echo "$LOGGER reload script not found: $script_path"
    exit 1
  fi
}

config_package() {
  if [[ -z "$1" ]]; then
    echo "$LOGGER Missing package argument for config"
    exit 1
  fi

  if [[ "$1" == "all" ]]; then
    run "$(pwd)/configs/all.sh"
    exit 0
  fi

  local config_path="$(pwd)/configs/$1"
  local target_path="$HOME/.config/$1"

  if [[ -d "$config_path" ]]; then
    echo "removing::config at '$target_path'"
    run rm -rf "$target_path"

    echo "copying::'$config_path' to '$target_path'"
    run cp -r "$config_path" "$target_path"
  else
    echo "$LOGGER config not found: $config_path"
    exit 1
  fi
}

install_package() {
  if [[ -z "$1" ]]; then
    echo "$LOGGER Missing package argument for install"
    exit 1
  fi

  local install_script
  install_script="$(pwd)/packages/$1.sh"

  if [[ -f "$install_script" ]]; then
    echo "INSTALLING::packages::$1"
    run bash "$install_script"
  else
    echo "$LOGGER install script not found: $install_script"
    exit 1
  fi
}

main() {
  case "$ACTION" in
    reload)
      reload_package "$PACKAGE"
      ;;
    configs)
      config_package "$PACKAGE"
      ;;
    install)
      install_package "$PACKAGE"
      ;;
    *)
      echo "$LOGGER use 'reload', 'config', or 'install' as first arg"
      exit 1
      ;;
  esac
}

main
